#pragma once

#include <array>
namespace tr::renderer {

enum GPUTimestampIndex {
  GPU_TIMESTAMP_INDEX_TOP,
  GPU_TIMESTAMP_INDEX_GBUFFER_BOTTOM,
  GPU_TIMESTAMP_INDEX_BOTTOM,
  GPU_TIMESTAMP_INDEX_IMGUI_TOP,
  GPU_TIMESTAMP_INDEX_IMGUI_BOTTOM,
  GPU_TIMESTAMP_INDEX_MAX,
  GPU_TIMESTAMP_INDEX_GBUFFER_TOP = GPU_TIMESTAMP_INDEX_TOP,
  GPU_TIMESTAMP_INDEX_DEFERRED_TOP = GPU_TIMESTAMP_INDEX_GBUFFER_BOTTOM,
  GPU_TIMESTAMP_INDEX_DEFERRED_BOTTOM = GPU_TIMESTAMP_INDEX_BOTTOM,

};

enum CPUTimestampIndex {
  CPU_TIMESTAMP_INDEX_ACQUIRE_FRAME_TOP,
  CPU_TIMESTAMP_INDEX_ACQUIRE_FRAME_BOTTOM,
  CPU_TIMESTAMP_INDEX_DRAW_TOP,
  CPU_TIMESTAMP_INDEX_DRAW_BOTTOM,
  CPU_TIMESTAMP_INDEX_PRESENT_TOP,
  CPU_TIMESTAMP_INDEX_PRESENT_BOTTOM,
  CPU_TIMESTAMP_INDEX_MAX,
};

struct GPUTimePeriodDescriptor {
  const char* name;

  GPUTimestampIndex from;
  GPUTimestampIndex to;
};

struct CPUTimePeriodDescriptor {
  const char* name;

  CPUTimestampIndex from;
  CPUTimestampIndex to;
};

static const std::array<GPUTimePeriodDescriptor, 4> GPU_TIME_PERIODS{{
    {"MAIN", GPU_TIMESTAMP_INDEX_TOP, GPU_TIMESTAMP_INDEX_BOTTOM},
    {"GBuffer", GPU_TIMESTAMP_INDEX_GBUFFER_TOP, GPU_TIMESTAMP_INDEX_GBUFFER_BOTTOM},
    {"Deferred", GPU_TIMESTAMP_INDEX_DEFERRED_TOP, GPU_TIMESTAMP_INDEX_DEFERRED_BOTTOM},
    {"ImGui", GPU_TIMESTAMP_INDEX_IMGUI_TOP, GPU_TIMESTAMP_INDEX_IMGUI_BOTTOM},
}};

static const std::array<CPUTimePeriodDescriptor, 3> CPU_TIME_PERIODS{{
    {"Acquire frame", CPU_TIMESTAMP_INDEX_ACQUIRE_FRAME_TOP, CPU_TIMESTAMP_INDEX_ACQUIRE_FRAME_BOTTOM},
    {"Draw", CPU_TIMESTAMP_INDEX_DRAW_TOP, CPU_TIMESTAMP_INDEX_DRAW_BOTTOM},
    {"Present", CPU_TIMESTAMP_INDEX_PRESENT_TOP, CPU_TIMESTAMP_INDEX_PRESENT_BOTTOM},
}};

}  // namespace tr::renderer
